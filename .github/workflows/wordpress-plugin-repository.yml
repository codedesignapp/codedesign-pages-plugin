name: Build, Commit, Tag and Release

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch

jobs:
  build-commit-tag-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14" # Set to your Node.js version

      - name: Install dependencies
        run: npm install
        working-directory: ./plugin-settings

      - name: Build
        run: npm run build
        working-directory: ./plugin-settings

      - name: Increment plugin version
        run: |
          CURRENT_VERSION=$(grep -oP "Version: \K(.*)" codedesign-connector.php)
          IFS='.' read -ra ADDR <<< "$CURRENT_VERSION"
          PATCH_VERSION=$((ADDR[2]+1))
          NEW_VERSION="${ADDR[0]}.${ADDR[1]}.$PATCH_VERSION"
          echo "New Version: $NEW_VERSION"
          sed -i "s/$CURRENT_VERSION/$NEW_VERSION/" codedesign-connector.php
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit built assets
        run: |
          git config --local user.email "support@codedesign.app"
          git config --local user.name "GitHub Action"
          git add -A  # Add all changes, including package-lock.json
          git diff --staged --quiet || git commit -m "Build assets"
          git push

      - name: Tag the new version
        run: |
          git config --global user.name 'Manjunath'
          git config --global user.email 'manjunath@codedesign.app'
          git tag ${{ env.NEW_VERSION }}
          git push origin ${{ env.NEW_VERSION }}

      - name: Archive the entire plugin directory for installer
        run: |
          zip -r codedesign-wp-plugin-installer-latest.zip . -x "*node_modules*/*" -x "*.git*"

      - name: Archive the plugin directory without plugin-update-checker for updater
        run: |
          mkdir codedesign-plugin
          shopt -s extglob
          cp -r !(codedesign-plugin|codedesign-wp-plugin-installer-latest.zip) codedesign-plugin/
          # Remove the plugin-update-checker-5.3 folder from the updater version
          rm -rf codedesign-plugin/plugin-update-checker-5.3
          # remove .prettierrc file from the updater version
          rm -rf codedesign-plugin/.prettierrc
          zip -r codedesign-wp-plugin-updater-latest.zip codedesign-plugin -x "*node_modules*/*" -x "*.git*"
          rm -rf codedesign-plugin

      - name: Prepare WordPress.org repository version
        run: |
          # Create a clean directory for WordPress.org plugin repository
          mkdir -p codedesign-pages-plugin
          shopt -s extglob
          cp -r !(codedesign-pages-plugin|codedesign-wp-plugin-installer-latest.zip|codedesign-wp-plugin-updater-latest.zip) codedesign-pages-plugin/
          # Remove the plugin-update-checker-5.3 folder as it's not needed for WordPress.org
          rm -rf codedesign-pages-plugin/plugin-update-checker-5.3
          # Remove other unnecessary files for WordPress.org
          rm -rf codedesign-pages-plugin/.prettierrc
          rm -rf codedesign-pages-plugin/.git*
          rm -rf codedesign-pages-plugin/plugin-settings/node_modules
          # Create the WordPress.org ready zip file
          zip -r codedesign-pages-plugin.zip codedesign-pages-plugin
          rm -rf codedesign-pages-plugin

      - name: Create update JSON file
        run: |
          JSON_FILE=plugin-update.json
          echo "{
            \"name\": \"CodeDesign.ai Pages\",
            \"version\": \"${{ env.NEW_VERSION }}\",
            \"download_url\": \"https://github.com/codedesignapp/wp-plugin/releases/download/${{ env.NEW_VERSION }}/codedesign-wp-plugin-updater-latest.zip\",
            \"install_url\": \"https://github.com/codedesignapp/wp-plugin/releases/download/${{ env.NEW_VERSION }}/codedesign-wp-plugin-installer-latest.zip\",
            \"sections\": {
              \"description\": \"<div><h2>CodeDesign.ai Pages</h2><p>Transform your WordPress experience with the <strong>CodeDesign.ai Pages plugin</strong>, a cutting-edge tool that integrates the advanced AI capabilities of CodeDesign.ai into your WordPress site. This plugin revolutionizes the process of web design and development for designers, developers, and content managers.</p><h3>Key Features:</h3><ul><li><strong>Instant Publishing:</strong> Seamlessly transfer your beautifully crafted pages from CodeDesign.ai to WordPress with just one click, ensuring design consistency and integrity.</li><li><strong>Effortless Updates:</strong> Synchronize changes made on CodeDesign.ai with your WordPress site effortlessly, keeping your content up-to-date without manual intervention.</li><li><strong>Design Freedom:</strong> Utilize the AI-driven design tools of CodeDesign.ai to create responsive, eye-catching pages that are fully compatible with WordPress.</li><li><strong>Simplified Workflow:</strong> This plugin bridges the gap between CodeDesign.ai and WordPress, streamlining your web design process and enabling you to focus more on creativity and content.</li><li><strong>Enhanced SEO:</strong> Benefit from SEO-optimized pages created through CodeDesign.ai, improving your WordPress site's search engine ranking and visibility.</li></ul><p>The <strong>CodeDesign.ai Pages</strong> plugin is your gateway to a new era of web design where AI-driven efficiency and creative freedom converge. It's the perfect tool for building a dynamic, visually stunning, and user-friendly website that stays ahead in the digital world.</p></div>\"
            }
          }" > $JSON_FILE
          git add $JSON_FILE
          git commit -m "Update JSON file for version ${{ env.NEW_VERSION }}"
          git push

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_VERSION }}
          name: Release ${{ env.NEW_VERSION }}
          draft: false
          prerelease: false
          files: |
            # codedesign-wp-plugin-installer-latest.zip
            # codedesign-wp-plugin-updater-latest.zip
            codedesign-pages-plugin.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
